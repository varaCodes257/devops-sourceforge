<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EmailProcessor', 'doctrine');

/**
 * BaseEmailProcessor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int             $id                       Type: integer(4), primary key
 * @property int             $email_id                 Type: integer(4)
 * @property string          $class_name               Type: string(100)
 * @property Email           $Email                    
 *  
 * @method int               getId()                   Type: integer(4), primary key
 * @method int               getEmailId()              Type: integer(4)
 * @method string            getClassName()            Type: string(100)
 * @method Email             getEmail()                
 *  
 * @method EmailProcessor    setId(int $val)           Type: integer(4), primary key
 * @method EmailProcessor    setEmailId(int $val)      Type: integer(4)
 * @method EmailProcessor    setClassName(string $val) Type: string(100)
 * @method EmailProcessor    setEmail(Email $val)      
 *  
 * @package    orangehrm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmailProcessor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_email_processor');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('email_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('class_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Email', array(
             'local' => 'email_id',
             'foreign' => 'id'));
    }
}